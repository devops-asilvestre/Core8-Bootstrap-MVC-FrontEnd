#  docker container run --rm --network=host -e SONAR_HOST_URL="http://localhost:9000" -v "./src:/urs/src" sonarsource/sonar-scanner-cli -Dsonar.projectKey=Manager.UI -Dsonar.sources=. -Dsonar.host.url=http://localhost:9000 -Dsonar.login=sqp_7e334834c4c009c7b7eb48e9a59f20330f8920ab
version: '3.8'

services:
  sonarqube:
    image: sonarqube:latest
    container_name: sonarqube
    ports:
      - "9000:9000"
    networks:
      - sonarnet
    environment:
      - SONAR_JDBC_URL=jdbc:postgresql://db:5432/sonar
      - SONAR_JDBC_USERNAME=sonar
      - SONAR_JDBC_PASSWORD=sonar
    volumes:
      - sonarqube_conf:/opt/sonarqube/conf
      - sonarqube_data:/opt/sonarqube/data
      - sonarqube_logs:/opt/sonarqube/logs
      - sonarqube_extensions:/opt/sonarqube/extensions
    command: ["sh", "-c", "exec java -jar lib/sonar-application-*.jar"]

  db:
    image: postgres:latest
    container_name: db
    environment:
      - POSTGRES_USER=sonar
      - POSTGRES_PASSWORD=sonar
      - POSTGRES_DB=sonar
    networks:
      - sonarnet
    volumes:
      - postgresql_data:/var/lib/postgresql/data

networks:
  sonarnet:
    driver: bridge

volumes:
  sonarqube_conf:
  sonarqube_data:
  sonarqube_logs:
  sonarqube_extensions:
  postgresql_data:
